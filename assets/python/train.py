# -*- coding: utf-8 -*-
"""Welcome To Colaboratory

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/notebooks/intro.ipynb
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_absolute_error
from sklearn.preprocessing import StandardScaler
from datetime import datetime, timedelta

weather_data = pd.read_csv('weatherHistory.csv')


weather_data = weather_data.drop(columns=['Formatted Date', 'Summary', 'Precip Type', 'Apparent Temperature (C)', 'Loud Cover', 'Daily Summary'])


Y = weather_data['Temperature (C)']
X = weather_data.drop(columns=['Temperature (C)'])


X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.2, random_state=42)


scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

model = RandomForestRegressor(n_estimators=100, random_state=42)

model.fit(X_train, y_train)

y_pred = model.predict(X_test)

mae = mean_absolute_error(y_test, y_pred)
print(f'Mean Absolute Error: {mae}')

new_data = pd.DataFrame([[0.83, 6.35, 245, 10, 996]])

new_data_scaled = scaler.transform(new_data)



next_10_days_predictions = model.predict(new_data_scaled)

target_variable = "Temperature (C)"

print('Predictions for the next 10 days:')
for i, prediction in enumerate(next_10_days_predictions):
    date = datetime.now() + timedelta(days=i+1)
    print(f'{date.date()}: {prediction:.2f} {target_variable}')


from joblib import dump, load
dump(model, "model.joblib")

dump(scaler, "scaler.joblib")